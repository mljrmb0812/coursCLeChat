32113TableauxMultidimensionnels

### Paragraphe 3 : Tableaux multidimensionnels en C

En langage C, les tableaux multidimensionnels permettent de stocker des données de manière structurée dans des matrices à deux dimensions ou plus. Ils sont utilisés pour représenter des structures de données tabulaires ou des grilles, telles que des matrices, des images, des jeux de plateau, etc.

### Déclaration des tableaux multidimensionnels

La déclaration d'un tableau multidimensionnel implique la spécification du type de données des éléments du tableau ainsi que les dimensions du tableau. Les tableaux multidimensionnels sont déclarés avec plusieurs paires de crochets `[ ]`.

#### Exemples de déclaration de tableaux multidimensionnels :

```c
int matrice[3][3];                 // Déclare une matrice 3x3 d'entiers
float image[2][1024][768];          // Déclare une image en couleurs 1024x768
char grille[10][10][10];            // Déclare une grille 3D de caractères 10x10x10
```

### Initialisation des tableaux multidimensionnels

Les tableaux multidimensionnels peuvent être initialisés lors de leur déclaration en utilisant des listes de valeurs initiales. Chaque paire de crochets `[ ]` représente une dimension supplémentaire dans la liste d'initialisation.

#### Exemple d'initialisation d'une matrice 2x2 :

```c
int matrice[2][2] = {
    {1, 2},
    {3, 4}
};
```

Dans cet exemple, une matrice 2x2 d'entiers est initialisée avec des valeurs.

### Accès aux éléments des tableaux multidimensionnels

Les éléments d'un tableau multidimensionnel sont accessibles en spécifiant les indices correspondant à chaque dimension du tableau. L'indice de chaque dimension commence à zéro.

#### Exemple d'accès aux éléments d'une matrice :

```c
int matrice[2][2] = {
    {1, 2},
    {3, 4}
};
printf("Element en [1][1] : %d\n", matrice[1][1]);   // Accès à l'élément à la deuxième ligne et deuxième colonne
```

Dans cet exemple, l'élément à la deuxième ligne et deuxième colonne de la matrice est accédé et affiché.

### Boucles pour parcourir les tableaux multidimensionnels

Les boucles imbriquées sont souvent utilisées pour parcourir tous les éléments d'un tableau multidimensionnel.

#### Exemple de parcours d'une matrice avec des boucles `for` :

```c
int matrice[3][3] = {
    {1, 2, 3},
    {4, 5, 6},
    {7, 8, 9}
};
for (int i = 0; i < 3; i++) {
    for (int j = 0; j < 3; j++) {
        printf("%d ", matrice[i][j]);
    }
    printf("\n");
}
```

Dans cet exemple, deux boucles `for` sont utilisées pour parcourir tous les éléments de la matrice et les afficher.

### Conclusion

Les tableaux multidimensionnels en C permettent de représenter et de manipuler efficacement des données tabulaires de manière structurée. Ils sont couramment utilisés pour stocker des données dans des grilles, des matrices et d'autres structures tabulaires. Comprendre la déclaration, l'initialisation et l'accès aux éléments des tableaux multidimensionnels est essentiel pour une programmation efficace en C, en particulier lors de la manipulation de données complexes ou de l'implémentation d'algorithmes nécessitant des structures de données tabulaires.